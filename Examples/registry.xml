<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2014.1.1 (Build 702U)" ts="2014-08-18 15:57:38">
<CSP name="CNARegistryExample.CSP" application="/csp/dev/" default="1"><![CDATA[
<html>
<head>

<title> CNA Registry Example </title>

</head>

<body>
<form action="CNARegistryExample.csp" method="GET">
Subkey of HKEY_CURRENT_USER:<br>
<input type="text" name="subkey"><br>
Parameter:<br>
<input type="text" name="param"><br>
<button type="submit">Get key</button>
</form>
<script language="Cache" runat="server">
if ($Data(%request.Data("subkey", 1)) && $Data(%request.Data("param", 1))) {
	try {
		set subkey = %request.Data("subkey", 1)
		set param = %request.Data("param", 1)
		w subkey, "<br>"
		w param, "<br>"	

		set CNAPath = "C:\Users\dd\Dropbox\is\CNA\libcna.dll"
		set libc = ##class(CNA.CNA).%New(CNAPath)
		do libc.LoadLibrary("C:\Windows\System32\msvcrt.dll")
		
		set argTypes = ##class(%ListOfDataTypes).%New()
		do argTypes.Insert(libc.#SIZET)
		set phkey = libc.CallFunction("malloc", libc.#POINTER, argTypes, 4) 
		set size = 1000
		set valueBuf = libc.CallFunction("malloc", libc.#POINTER, argTypes, size) 
		set sizeBuf = libc.CallFunction("malloc", libc.#POINTER, argTypes, 4)
		do libc.PointerSetAt(sizeBuf, libc.#ULONG, 0, size) 

		set advapi = ##class(CNA.CNA).%New(CNAPath)
		do advapi.LoadLibrary("C:\Windows\System32\advapi32.dll")

		do argTypes.Clear()
		do argTypes.Insert(advapi.#LONG)
		do argTypes.Insert(advapi.#POINTER)

		set res = advapi.CallFunction("RegOpenCurrentUser", advapi.#INT, argTypes, $zhex("20019"), phkey)
		if (res '= 0) {
			w "RegOpenCurrentUset error: " _ res _ "<br>"
			return
		}

		set hkey = advapi.PointerGetAt(phkey, advapi.#ULONG, 0)

		do argTypes.Clear()
		do argTypes.Insert(advapi.#ULONG)
		do argTypes.Insert(advapi.#POINTER)
		do argTypes.Insert(advapi.#POINTER)
		do argTypes.Insert(advapi.#ULONG)
		do argTypes.Insert(advapi.#POINTER)
		do argTypes.Insert(advapi.#POINTER)
		do argTypes.Insert(advapi.#POINTER)
		set pSubkey = advapi.ConvertStringToPointer(subkey)
		set pParam = advapi.ConvertStringToPointer(param)
		set res = advapi.CallFunction("RegGetValueA", advapi.#LONG, argTypes, hkey, pSubkey, pParam, $zhex("ffff"), advapi.NULL, valueBuf, sizeBuf)

		if (res = 0) {
			w advapi.ConvertPointerToString(valueBuf), "<br>"
		} else {
			w "RegGetValue Error: " _ res _ "<br>"
		}

		do advapi.FreeLibrary()
		do argTypes.Clear()
		do argTypes.Insert(libc.#POINTER)
		do libc.CallFunction("free", libc.#VOID, argTypes, phkey)
		do libc.CallFunction("free", libc.#VOID, argTypes, valueBuf) 
		do libc.CallFunction("free", libc.#VOID, argTypes, sizeBuf) 
		do libc.FreeLibrary()
	} catch ex {
		w $system.Status.GetErrorText(ex.AsStatus())
	}
}
</script>
</body>
</html>
]]></CSP>
</Export>
